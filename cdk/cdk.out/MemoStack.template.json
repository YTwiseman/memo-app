{
 "Resources": {
  "MemoTable68FB2B69": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "MemoTable"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoTable/Resource"
   }
  },
  "MemoFunctionServiceRole85E973D6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoFunction/ServiceRole/Resource"
   }
  },
  "MemoFunctionServiceRoleDefaultPolicyA8892C1A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MemoTable68FB2B69",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MemoFunctionServiceRoleDefaultPolicyA8892C1A",
    "Roles": [
     {
      "Ref": "MemoFunctionServiceRole85E973D6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "MemoFunction8E9B37B8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:2a63dd498b8d7c30252f9ad3b8cc3dba87798218a3fc5542afafced10c9a3e58"
     }
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MemoTable68FB2B69"
      }
     }
    },
    "MemorySize": 512,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "MemoFunctionServiceRole85E973D6",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "MemoFunctionServiceRoleDefaultPolicyA8892C1A",
    "MemoFunctionServiceRole85E973D6"
   ],
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoFunction/Resource",
    "aws:asset:path": "asset.2a63dd498b8d7c30252f9ad3b8cc3dba87798218a3fc5542afafced10c9a3e58",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "MemoApiDDEC7F67": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "MemoApi"
   },
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoApi/Resource"
   }
  },
  "MemoApiCloudWatchRole9534FF70": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoApi/CloudWatchRole/Resource"
   }
  },
  "MemoApiAccountA63E6DFA": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "MemoApiCloudWatchRole9534FF70",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "MemoApiDDEC7F67"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoApi/Account"
   }
  },
  "MemoApiDeployment1719CC5E0267101f11539960c856c039fe68c45a": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "MemoApiDDEC7F67"
    }
   },
   "DependsOn": [
    "MemoApiproxyANY3F145CA7",
    "MemoApiproxyC353881E",
    "MemoApiANYF71E4656"
   ],
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoApi/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "MemoApiDeploymentStageprod5F0E9354": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "MemoApiDeployment1719CC5E0267101f11539960c856c039fe68c45a"
    },
    "RestApiId": {
     "Ref": "MemoApiDDEC7F67"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "MemoApiAccountA63E6DFA"
   ],
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoApi/DeploymentStage.prod/Resource"
   }
  },
  "MemoApiproxyC353881E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "MemoApiDDEC7F67",
      "RootResourceId"
     ]
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "MemoApiDDEC7F67"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoApi/Default/{proxy+}/Resource"
   }
  },
  "MemoApiproxyANYApiPermissionMemoStackMemoApi3EDD386AANYproxy40887C21": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MemoFunction8E9B37B8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MemoApiDDEC7F67"
       },
       "/",
       {
        "Ref": "MemoApiDeploymentStageprod5F0E9354"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoApi/Default/{proxy+}/ANY/ApiPermission.MemoStackMemoApi3EDD386A.ANY..{proxy+}"
   }
  },
  "MemoApiproxyANYApiPermissionTestMemoStackMemoApi3EDD386AANYproxyB9127979": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MemoFunction8E9B37B8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MemoApiDDEC7F67"
       },
       "/test-invoke-stage/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoApi/Default/{proxy+}/ANY/ApiPermission.Test.MemoStackMemoApi3EDD386A.ANY..{proxy+}"
   }
  },
  "MemoApiproxyANY3F145CA7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MemoFunction8E9B37B8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "MemoApiproxyC353881E"
    },
    "RestApiId": {
     "Ref": "MemoApiDDEC7F67"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoApi/Default/{proxy+}/ANY/Resource"
   }
  },
  "MemoApiANYApiPermissionMemoStackMemoApi3EDD386AANY1EA99F20": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MemoFunction8E9B37B8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MemoApiDDEC7F67"
       },
       "/",
       {
        "Ref": "MemoApiDeploymentStageprod5F0E9354"
       },
       "/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoApi/Default/ANY/ApiPermission.MemoStackMemoApi3EDD386A.ANY.."
   }
  },
  "MemoApiANYApiPermissionTestMemoStackMemoApi3EDD386AANYB1A7CC1A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MemoFunction8E9B37B8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MemoApiDDEC7F67"
       },
       "/test-invoke-stage/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoApi/Default/ANY/ApiPermission.Test.MemoStackMemoApi3EDD386A.ANY.."
   }
  },
  "MemoApiANYF71E4656": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MemoFunction8E9B37B8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "MemoApiDDEC7F67",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "MemoApiDDEC7F67"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MemoStack/MemoApi/Default/ANY/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02O3U7DMAyFn2X3mWEVEteDCQkJxNRxP7mp6bw2cZW4jKrqu6Ok/OzKX45Pjk8BxeYObld4iWtbt+uOK5gOirY1eInHqR49OqkrmN6x6sg8fvgMs+nQVTXCtBPbUnh22NDT4K2y+OS65j0FxzGy+NkwOphKWaLy3EvHdsy+TLMhG44YI2mEq/RtUtIOSuolskoYHzCSwZ4bVLrgCNNLblVS1G3P+cQ/bq2VwavZUd/J6MhrUq9eB8Um91qgpChDsJSP7IN8jb/KT/DCr6QnqZO00Dz//TS5c0pj3yTH26D9oLPxUhOc481nUcDmHjarc2Reh8ErO4Jymd+kabz/nAEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "MemoStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "MemoApiEndpoint3FE35AE5": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "MemoApiDDEC7F67"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "MemoApiDeploymentStageprod5F0E9354"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}